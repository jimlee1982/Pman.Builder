{
    "id": "roo-file-6",
    "name": "Pman.Dialog.BuilderProp",
    "parent": "",
    "title": "",
    "path": "/home/alan/gitlive/Pman.Builder/Pman.Dialog.BuilderProp.bjs",
    "items": [
        {
            "listeners": {
                "show": "function (_self)\n{\n   _this.data.ds.load();\n}"
            },
            "closable": false,
            "collapsible": false,
            "height": 600,
            "resizable": false,
            "title": "Add Property",
            "width": 600,
            "xtype": "LayoutDialog",
            "|xns": "Roo",
            "items": [
                {
                    "|xns": "Roo",
                    "xtype": "LayoutRegion",
                    "*prop": "center"
                },
                {
                    "listeners": {
                        "|activate": "function() {\n    _this.panel = this;\n    //if (_this.grid) {\n    //    _this.grid.ds.load({});\n    //}\n}"
                    },
                    "fitContainer": true,
                    "fitToframe": true,
                    "region": "center",
                    "tableName": "AutoAuth",
                    "title": "AutoAuth",
                    "xtype": "GridPanel",
                    "|xns": "Roo",
                    "items": [
                        {
                            "listeners": {
                                "|render": "function() \n{\n    _this.grid = this; \n    //_this.dialog = Pman.Dialog.FILL_IN\n   // if (_this.panel.active) {\n     //  this.footer.onClick('first');\n   // }\n}",
                                "|rowdblclick": "function (_self, rowIndex, e)\n{\n     \n     _this.callback(this.getDataSource().getAt(rowIndex).data.name);\n     _this.dialog.hide(); \n}\n"
                            },
                            "*prop": "grid",
                            "autoExpandColumn": "desc",
                            "loadMask": true,
                            "xtype": "Grid",
                            "|xns": "Roo.grid",
                            "items": [
                                {
                                    "listeners": {
                                        "beforeload": "function (_self, options)\n{\n    // we should cache this!!!\n    options.params = options.params || {};\n    options.params.xtype = this.data.xtype;\n    options.params.xns = this.data.xns;\n    \n}"
                                    },
                                    "*prop": "dataSource",
                                    "remoteSort": false,
                                    "xtype": "Store",
                                    "|sortInfo": "{ field : 'name', direction: 'ASC' }",
                                    "|xns": "Roo.data",
                                    "items": [
                                        {
                                            "*prop": "proxy",
                                            "method": "GET",
                                            "xtype": "HttpProxy",
                                            "|url": "baseURL + '/Builder/Prop.php'",
                                            "|xns": "Roo.data"
                                        },
                                        {
                                            "|xns": "Roo.data",
                                            "xtype": "JsonReader",
                                            "totalProperty": "total",
                                            "root": "data",
                                            "*prop": "reader",
                                            "id": "id",
                                            "|fields": "[\n    {\n        'name': 'id',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id',\n        'type': 'int'\n    },\n    {\n        'name': 'url',\n        'type': 'string'\n    },\n    {\n        'name': 'ts',\n        'type': 'date',\n        'dateFormat': 'Y-m-d'\n    },\n    {\n        'name': 'checksum',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_id',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id_name',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_title',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_company',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_address',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_email',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_telephone',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_fax',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_mobile',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_country',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_currency',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_shipping_method',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_shipping_acc',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_terms_agreed',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id_passwd',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_is_buyer',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id_is_seller',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id_is_want_blind_rfq',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id_buyer_type',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_is_verified',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id_is_disabled',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id_is_want_email',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id_mail_newprod_freq',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id_quotation_by',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_is_want_make_offer',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id_mail_inventry_freq',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id_max_rfq_per_day',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id_is_approved',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id_created',\n        'type': 'date'\n    },\n    {\n        'name': 'user_id_modified',\n        'type': 'date'\n    },\n    {\n        'name': 'user_id_modified_by',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id_is_administrator',\n        'type': 'int'\n    },\n    {\n        'name': 'user_id_bank_name',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_bank_account',\n        'type': 'string'\n    },\n    {\n        'name': 'user_id_last_inventory_sent',\n        'type': 'date'\n    },\n    {\n        'name': 'user_id_last_rfq_report_sent',\n        'type': 'date'\n    },\n    {\n        'name': 'user_id_last_productlist_sent',\n        'type': 'date'\n    },\n    {\n        'name': 'user_id_company_id',\n        'type': 'int'\n    }\n]"
                                        }
                                    ]
                                },
                                {
                                    "*prop": "colModel[]",
                                    "dataIndex": "name",
                                    "header": "name",
                                    "width": 175,
                                    "xtype": "ColumnModel",
                                    "|renderer": "function(v) { return String.format('{0}', v ? v.format('d/M/Y') : ''); }",
                                    "|xns": "Roo.grid"
                                },
                                {
                                    "*prop": "colModel[]",
                                    "dataIndex": "desc",
                                    "header": "Description",
                                    "width": 200,
                                    "xtype": "ColumnModel",
                                    "|renderer": "function(v) { return String.format('{0}', v); }",
                                    "|xns": "Roo.grid"
                                }
                            ]
                        }
                    ]
                },
                {
                    "listeners": {
                        "click": "function (_self, e)\n{\n    _this.dialog.hide();\n}"
                    },
                    "*prop": "buttons[]",
                    "text": "Cancel",
                    "xtype": "Button",
                    "|xns": "Roo"
                },
                {
                    "listeners": {
                        "click": "function (_self, e)\n{\n    // do some checks?\n     var sel = _this.grid.getSelectionModel().getSelected();\n    if (!sel) {\n        Roo.MessageBox.alert(\"Error\", \"Select a property\");\n    }\n    \n    _this.callback(sel.data.name);\n   _this.dialog.hide();\n \n\n}"
                    },
                    "*prop": "buttons[]",
                    "text": "Add",
                    "xtype": "Button",
                    "|xns": "Roo"
                }
            ]
        }
    ],
    "permname": "",
    "modOrder": "001"
}